name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: "3.11", os: ubuntu-latest }
          - { python-version: "3.11", os: macos-latest }
          - { python-version: "3.10", os: ubuntu-latest }
    env:
      NOXSESSION: ${{ matrix.session }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        uses: pypa/hatch@a3c83ab3d481fbc2dc91dd0088628817488dd1d5

      - name: Run static analysis
        run: hatch fmt --check

      - name: Run tests
        run: hatch test --python ${{ matrix.python-version }} --cover-quiet --randomize --parallel --retries 5 --retry-delay 3

      - name: Disambiguate coverage filename
        run: mv .coverage ".coverage.${{ matrix.os }}.${{ matrix.python-version }}"

      - name: Upload coverage data
        if: always() && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
          path: .coverage*

  coverage:
    name: Report coverage
    runs-on: ubuntu-latest
    needs:
      - tests

    steps:
      - uses: actions/checkout@v4

      - name: Install Hatch
        uses: pypa/hatch@a3c83ab3d481fbc2dc91dd0088628817488dd1d5

      - name: Trigger build for auto-generated files
        run: hatch build --hooks-only

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Combine coverage data
        run: hatch run coverage:combine

      - name: Generate coverage summary
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          {
            echo "TEST_RESULT<<$EOF"
            hatch run coverage:report
            echo "$EOF"
          } >> "$GITHUB_ENV"

      - name: Update coverage pull request comment
        if: github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: test
          hide_and_recreate: true
          hide_classify: 'OUTDATED'
          message: |
            ## Coverage Report

            ${{ env.TEST_RESULT }}

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
